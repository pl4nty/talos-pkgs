name: kernel
variant: scratch
shell: /bin/bash
dependencies:
  - stage: base
  - stage: kernel-build
steps:
  - env:
      ARCH: {{ if eq .ARCH "aarch64"}}arm64{{ else if eq .ARCH "x86_64" }}x86_64{{ else if eq .ARCH "riscv64" }}riscv{{ else }}unsupported{{ end }}
    cachePaths:
      - /src/build
    install:
      - |
        cd /src/build

        mkdir -p /rootfs/boot
        mkdir -p /rootfs/dtb
        mkdir -p /rootfs/certs

        if [ "${ARCH}" == "x86_64" ]; then
          cp arch/x86/boot/bzImage /rootfs/boot/vmlinuz
        elif [[ "${ARCH}" == "arm64" ]] || [[ "${ARCH}" = "riscv" ]]; then
          cp "arch/${ARCH}/boot/vmlinuz.efi" /rootfs/boot/vmlinuz
          cd "./arch/${ARCH}/boot/dts"
          for vendor in $(find . -not -path . -type d); do
            dest="/rootfs/dtb/$vendor"
            mkdir -v $dest
            find ./$vendor/* -type f -name "*.dtb" -exec cp {} $dest \;
          done
          cd -
        else
          echo "unsupported arch ${ARCH}"
          exit 1
        fi

        export KERNELRELEASE=$(cat include/config/kernel.release)
        make -j $(nproc) modules_install INSTALL_MOD_PATH=/rootfs/usr INSTALL_MOD_STRIP=1
        depmod -b /rootfs/usr $KERNELRELEASE
        unlink /rootfs/usr/lib/modules/$KERNELRELEASE/build
    sbom:
      outputPath: /rootfs/usr/share/spdx/kernel.spdx.json
      version: {{ .linux_version }}
      cpes:
        - cpe:2.3:o:linux:linux_kernel:{{ .linux_version }}:*:*:*:*:*:*:*
      licenses:
        - GPL-2.0-only
finalize:
  - from: /rootfs
    to: /
